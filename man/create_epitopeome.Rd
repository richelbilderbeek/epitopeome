% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_epitopeome.R
\name{create_epitopeome}
\alias{create_epitopeome}
\title{Create epitopeome indicating strong MHC2 binders}
\usage{
create_epitopeome(fasta_filename, alleles = "DRB1_0101",
  binding_strength_threshold = 5, tmhmm_filename = tempfile(fileext =
  "txt"), netmhc2pan_filename = tempfile(fileext = ".csv"),
  epitopeome_filename = tempfile(fileext = ".fasta"))
}
\arguments{
\item{fasta_filename}{the name of a FASTA file with protein sequences}

\item{alleles}{one or more alleles, e.g. \code{DRB1_0101}.
See \link{get_netmhc2pan_alleles} for a full list}

\item{binding_strength_threshold}{threshold of the MHC2 allele's
binding strength. A low threshold, e.g. \code{5.0}, selects for the top
5 percent best binders}

\item{tmhmm_filename}{name of the file to store the
TMHMM output.
By default, this filename is generated by \link{tempfile},
and will be put in the \code{/tmp} folder,
which is cleaned by the operating system}

\item{netmhc2pan_filename}{name of the file to store the
NetMHC2pan output.
By default, this filename is generated by \link{tempfile},
and will be put in the \code{/tmp} folder,
which is cleaned by the operating system}

\item{epitopeome_filename}{name of the file to store the epitopeome
output.
By default, this filename is generated by \link{tempfile},
and will be put in the \code{/tmp} folder,
which is cleaned by the operating system}
}
\value{
the epitopeome as text
}
\description{
Create epitopeome indicating strong MHC2 binders
}
\examples{
library(testthat)

fasta_filename <- system.file(
  "extdata", "proteome.fasta", package = "epitopeome"
)
epitopeome <- create_epitopeome(fasta_filename)
expect_equal(2, length(epitopeome))
expect_equal(">tr|I6WZ58|I6WZ58_MYCTU", epitopeome[1])
expect_equal(313, stringr::str_length(epitopeome[2]))
expect_equal(39, stringr::str_count(epitopeome[2], "i"))
expect_equal(47, stringr::str_count(epitopeome[2], "m"))
expect_equal(163, stringr::str_count(epitopeome[2], "o"))
expect_equal(10, stringr::str_count(epitopeome[2], "I"))
expect_equal(37, stringr::str_count(epitopeome[2], "M"))
expect_equal(17, stringr::str_count(epitopeome[2], "O"))
}
\author{
Richel J.C. Bilderbeek
}
